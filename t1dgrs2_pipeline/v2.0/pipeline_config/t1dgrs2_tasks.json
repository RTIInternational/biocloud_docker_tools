{
    "download_gvcfs_from_revvity_sftp": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "sftp_server": {
                "type": "str"
            },
            "sftp_username": {
                "type": "str"
            },
            "sftp_password": {
                "type": "str"
            },
            "source_sftp_dir": {
                "type": "dir"
            },
            "target_dir": {
                "type": "dir"
            },
            "manifest_dir": {
                "type": "dir"
            },
            "downloaded_samples": {
                "type": "file"
            },
            "download_limit": {
                "type": "int"
            },
            "samples_to_download": {
                "type": "file"
            }
        },
        "cmd": [
            "python",
            "/opt/download_gvcfs_from_revvity_sftp.py",
            "--sftp_server",
            "<inputs.sftp_server>",
            "--username",
            "<inputs.sftp_username>",
            "--password",
            "<inputs.sftp_password>",
            "--source_dir",
            "<inputs.source_sftp_dir>",
            "--target_dir",
            "<inputs.target_dir>",
            "--manifest_dir",
            "<inputs.rti_manifest_dir>",
            "--downloaded_samples",
            "<inputs.downloaded_samples>",
            "--download_limit",
            "<inputs.download_limit>",
            "--samples_to_download",
            "<inputs.samples_to_download>"
        ],
        "outputs": {
            "downloaded_samples": {
                "type": "file",
                "value": "<inputs.downloaded_samples>"
            },
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>s3_download.log"
            }
        }
    },
    "batch_extract_gvcf_variants": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "output_dir": {
                "type": "dir"
            },
            "gvcf_dir": {
                "type": "dir"
            },
            "variant_list": {
                "type": "file"
            },
            "argo_api_url": {
                "type": "str",
                "default": "http://argo-early-check-rs-1-server:2746/api/v1/workflows/early-check-rs-1"
            },
            "simultaneous_jobs": {
                "type": "int",
                "default": 50
            }
        },
        "cmd": [
            "python",
            "/opt/batch_extract_gvcf_variants.py",
            "--working_dir",
            "<inputs.working_dir>",
            "--output_dir",
            "<inputs.output_dir>",
            "--gvcf_dir",
            "<inputs.gvcf_dir>",
            "--variant_list",
            "<inputs.variant_list>",
            "--argo_api_url",
            "<inputs.argo_api_url>",
            "--simultaneous_jobs",
            "<inputs.simultaneous_jobs>"
        ],
        "outputs": {
            "plink_merge_list": {
                "type": "file",
                "value": "<inputs.output_dir>plink_merge_list.txt"
            },
            "missingness_merge_list": {
                "type": "file",
                "value": "<inputs.output_dir>missingness_merge_list.txt"
            },
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>batch_extract_gvcf_variants.log"
            }
        }
    },
    "extract_gvcf_variants": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "output_dir": {
                "type": "dir"
            },
            "sample_id": {
                "type": "str"
            },
            "gvcf": {
                "type": "file"
            },
            "variant_list": {
                "type": "file"
            },
            "out_prefix": {
                "type": "str"
            },
            "pass_only": {
                "type": "int",
                "default": 0
            },
            "filter_by_gq": {
                "type": "int",
                "default": 0
            },
            "hom_gq_threshold": {
                "type": "int",
                "default": 99
            },
            "het_gq_threshold": {
                "type": "int",
                "default": 48
            },
            "hla_variants_file": {
                "type": "file"
            },
            "non_hla_variants_file": {
                "type": "file"
            }
        },
        "cmd": [
            "/opt/extract_gvcf_variants.pl",
            "--gvcf",
            "<inputs.gvcf>",
            "--out_prefix",
            "<inputs.out_prefix>",
            "--variant_list",
            "<inputs.variant_list>",
            "--pass_only",
            "<inputs.pass_only>",
            "--filter_by_gq",
            "<inputs.filter_by_gq>",
            "--hom_gq_threshold",
            "<inputs.hom_gq_threshold>",
            "--het_gq_threshold",
            "<inputs.het_gq_threshold>"
        ],
        "outputs": {
            "t1dgrs2_variants_vcf": {
                "type": "file",
                "value": "<inputs.out_prefix>.vcf"
            },
            "missing": {
                "type": "file",
                "value": "<inputs.out_prefix>_missing.txt"
            },
            "missings_summary": {
                "type": "file",
                "value": "<inputs.out_prefix>_missing_summary.tsv"
            },
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>extract_gvcf_variants.log"
            }
        }
    },
    "convert_vcf_to_bfile": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "output_dir": {
                "type": "dir"
            },
            "vcf": {
                "type": "file"
            },
            "out_prefix": {
                "type": "str"
            }
        },
        "cmd": [
            "plink",
            "--vcf",
            "<inputs.vcf>",
            "--out",
            "<inputs.out_prefix>",
            "--make-bed"
        ],
        "outputs": {
            "bed": {
                "type": "file",
                "value": "<inputs.out_prefix>.bed"
            },
            "bim": {
                "type": "file",
                "value": "<inputs.out_prefix>.bim"
            },
            "fam": {
                "type": "file",
                "value": "<inputs.out_prefix>.fam"
            },
            "plink_log": {
                "type": "file",
                "value": "<inputs.out_prefix>.log"
            },
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>convert_vcf_to_bfile.log"
            }
        }
    },
    "merge_sample_bfiles_and_controls": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "output_dir": {
                "type": "dir"
            },
            "ref_bfile": {
                "type": "str"
            },
            "sample_merge_list": {
                "type": "file"
            },
            "out_prefix": {
                "type": "str"
            }
        },
        "cmd": [
            "plink",
            "--bfile",
            "<inputs.ref_bfile>",
            "--merge-list",
            "<inputs.sample_merge_list>",
            "--out",
            "<inputs.out_prefix>",
            "--make-bed"
        ],
        "outputs": {
            "bfile": {
                "type": "str",
                "value": "<inputs.out_prefix>"
            },
            "bed": {
                "type": "file",
                "value": "<inputs.out_prefix>.bed"
            },
            "bim": {
                "type": "file",
                "value": "<inputs.out_prefix>.bim"
            },
            "fam": {
                "type": "file",
                "value": "<inputs.out_prefix>.fam"
            },
            "plink_log": {
                "type": "file",
                "value": "<inputs.out_prefix>.log"
            },
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>merge_bfile_with_reference.log"
            }
        }
    },
    "merge_file_rows": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "output_dir": {
                "type": "dir"
            },
            "merge_list": {
                "type": "file"
            },
            "header_row_count": {
                "type": "int"
            },
            "out_file": {
                "type": "str"
            }
        },
        "cmd": [
            "/opt/extract_gvcf_variants.pl",
            "--merge_list",
            "<inputs.merge_list>",
            "--merge-header_row_count",
            "<inputs.header_row_count>",
            "--out_file",
            "<inputs.out_file>"
        ],
        "outputs": {
            "merged_file": {
                "type": "file",
                "value": "<inputs.out_file>"
            },
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>merge_file_rows.log"
            }
        }
    },
    "calculate_t1dgrs2": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "output_dir": {
                "type": "dir"
            },
            "bfile": {
                "type": "str"
            },
            "out_prefix": {
                "type": "str"
            }
        },
        "cmd": [
            "python",
            "-m",
            "t1dgrs2",
            "-b",
            "<inputs.bfile>",
            "-c",
            "/pipeline/config/t1dgrs2_settings.yml",
            "-o",
            "<inputs.out_prefix>"
        ],
        "outputs": {
            "dosage": {
                "type": "file",
                "value": "<inputs.out_prefix>_dosage.tsv"
            },
            "dq_calls": {
                "type": "file",
                "value": "<inputs.out_prefix>_DQ_calls.tsv"
            },
            "results": {
                "type": "file",
                "value": "<inputs.out_prefix>_RESULTS.tsv"
            },
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>calculate_t1dgrs2.log"
            }
        }
    },
    "generate_file_for_export": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "output_dir": {
                "type": "dir"
            },
            "t1dgrs2_results_file": {
                "type": "file"
            },
            "missingness_summary_file": {
                "type": "file"
            },
            "remove_file": {
                "type": "file"
            },
            "output_file": {
                "type": "str"
            },
            "missing_hla_threshold": {
                "type": "int",
                "default": 1
            },
            "missing_non_hla_threshold": {
                "type": "int",
                "default": 3
            }
        },
        "cmd": [
            "/opt/generate_file_for_export.pl",
            "--t1dgrs2_results_file",
            "<inputs.t1dgrs2_results_file>",
            "--missingness_summary_file",
            "<inputs.missingness_summary_file>",
            "--remove_file",
            "<inputs.remove_file>",
            "--output_file",
            "<inputs.output_file>",
            "--missing_hla_threshold",
            "<inputs.missing_hla_threshold>",
            "--missing_non_hla_threshold",
            "<inputs.missing_non_hla_threshold>"
        ],
        "outputs": {
            "file_for_export": {
                "type": "file",
                "value": "<inputs.output_file>"
            },
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>generate_file_for_export.log"
            }
        }
    },
    "sftp_results": {
        "inputs": {
            "working_dir": {
                "type": "dir"
            },
            "sftp_server": {
                "type": "str"
            },
            "username": {
                "type": "str"
            },
            "password": {
                "type": "str"
            },
            "results_file": {
                "type": "str"
            },
            "target_dir": {
                "type": "str"
            }
        },
        "cmd": [
            "python",
            "/opt/sftp_results.py",
            "--sftp_server",
            "<inputs.sftp_server>",
            "--username",
            "<inputs.username>",
            "--password",
            "<inputs.password>",
            "--results_file",
            "<inputs.results_file>",
            "--target_dir",
            "<inputs.target_dir>"
        ],
        "outputs": {
            "log": {
                "type": "file",
                "value": "<inputs.working_dir>sftp_results.log"
            }
        }
    }
}
