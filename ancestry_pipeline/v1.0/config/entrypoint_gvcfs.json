{
    "name": "entrypoint_gvcfs",
    "inputs": {
        "output_dir": {
            "type": "dir",
            "default": "",
            "required": true
        },
        "gvcf_dir": {
            "type": "dir",
            "default": "",
            "required": true
        },
        "ref_prefix": {
            "type": "str",
            "default": "",
            "required": true
        },
        "sequencing_provider": {
            "type": "str",
            "default": "revvity",
            "required": false
        },
        "argo_api_url": {
            "type": "str",
            "default": "http://argo-early-check-rs-1-server:2746/api/v1/workflows/early-check-rs-1",
            "required": false
        },
        "simultaneous_jobs": {
            "type": "int",
            "default": 50,
            "required": false
        },
        "include_monomorphic_positions": {
            "type": "int",
            "default": 0,
            "required": false
        },
        "filter_by_qual": {
            "type": "int",
            "default": 0,
            "required": false
        },
        "filter_by_gq": {
            "type": "int",
            "default": 0,
            "required": false
        },
        "hom_gq_threshold": {
            "type": "int",
            "default": 99,
            "required": false
        },
        "het_gq_threshold": {
            "type": "int",
            "default": 48,
            "required": false
        }
    },
    "outputs": {
        "log": {
            "type": "file",
            "value": "<inputs.output_dir>/entrypoint_batch_extract_gvcf_variants.log"
        }
    },
    "entry_point": "batch_extract_gvcf_variants",
    "entry_point_inputs": {
        "output_dir": "<inputs.output_dir>batch_extract_gvcf_variants",
        "gvcf_dir": "<inputs.gvcf_dir>",
        "ref_bim": "<inputs.ref_prefix>.bim",
        "sequencing_provider": "<inputs.sequencing_provider>",
        "argo_api_url": "<inputs.argo_api_url>",
        "simultaneous_jobs": "<inputs.simultaneous_jobs>",
        "include_monomorphic_positions": "<inputs.include_monomorphic_positions>",
        "filter_by_qual": "<inputs.filter_by_qual>",
        "filter_by_gq": "<inputs.filter_by_gq>",
        "hom_gq_threshold": "<inputs.hom_gq_threshold>",
        "het_gq_threshold": "<inputs.het_gq_threshold>"
},
    "pipeline": {
        "batch_extract_gvcf_variants": {
            "task": "batch_extract_gvcf_variants",
            "check_output": {
                "returncode_0": {
                    "step": "exit"
                },
                "returncode_1": { 
                    "step": "error"
                }
            }
        }
    }
}
